[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap <silent> ,r :Denite file_mru<CR>
  nnoremap <silent> ,f :Denite file_rec<CR>
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#sources#clang#libclang_path='/usr/lib/llvm-3.8/lib/libclang.so.1'
  let g:deoplete#sources#clang#clang_header='/usr/lib/llvm-3.8/lib/clang/3.8.1/include'
  let g:deoplete#auto_complete_delay=100
  let g:deoplete#enable_at_startup=1
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['Shougo/neosnippet-snippets']
hook_add = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_event = 'InsertEnter'
lazy = 1

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'

[[plugins]]
repo = 'kana/vim-smartinput'
on_event = 'InsertEnter'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'rking/ag.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-abolish'
lazy = 1

[[plugins]]
repo = 'tpope/vim-endwise'
on_event = 'InsertEnter'

[[plugins]]
repo = 'scrooloose/syntastic'
on_event = 'InsertEnter'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'jsfaint/gen_tags.vim'

[[plugins]]
repo = 'tpope/vim-projectionist'

[[plugins]]
repo = 'glidenote/memolist.vim'
hook_add = '''
  let g:memolist_memo_suffix = "md"
  let g:memolist_ex_cmd = 'NERDTree'
  let g:memolist_denite = 1

  nnoremap <leader>m :split ~/memo/tmp.md<CR> :resize 12<CR>
  nnoremap <leader>ml :MemoList<CR>
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'kana/vim-tabpagecd'


# UserInterface {{{

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent> <leader>e :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
  nnoremap <silent> <leader>t :TagbarToggle<CR>

  let g:tagbar_iconchars = ['+', '-']

  let g:tagbar_type_typescript = {
    \ 'ctagsbin' : 'tstags',
    \ 'ctagsargs' : '-f-',
    \ 'kinds': [
      \ 'e:enums:0:1',
      \ 'f:function:0:1',
      \ 't:typealias:0:1',
      \ 'M:Module:0:1',
      \ 'I:import:0:1',
      \ 'i:interface:0:1',
      \ 'C:class:0:1',
      \ 'm:method:0:1',
      \ 'p:property:0:1',
      \ 'v:variable:0:1',
      \ 'c:const:0:1',
    \ ],
    \ 'sort' : 0
  \ }
'''

[[plugins]]
repo = 'bling/vim-airline'

[[plugins]]
repo = 'morhetz/gruvbox'
hook_add = '''
  set background=dark
  au VimEnter * nested colorscheme gruvbox
'''

[[plugins]]
repo = 'luochen1990/rainbow'

# }}}

# Rails {{{

[[plugins]]
repo = 'tpope/vim-rails'
depends = ['tpope/vim-surround']
hook_add = '''
  let g:surround_{char2nr('-')} = "<% \r %>"
  let g:surround_{char2nr('=')} = "<%= \r %>"
'''

# }}}

# Ember {{{

[[plugins]]
repo = 'mustache/vim-mustache-handlebars'

[[plugins]]
repo = 'camthompson/vim-ember'
depends = ['tpope/vim-projectionist']

[[plugins]]
repo = 'AndrewRadev/ember_tools.vim'
depends = ['tpope/vim-projectionist']

# }}}

# Typescript {{{

[[plugins]]
repo = 'mhartington/nvim-typescript'
hook_add = '''
  let g:nvim_typescript#default_mappings = 1
  let g:nvim_typescript#javascript_support = 1
'''
hook_post_update = '''
  let g:dein#plugin.build = './install.sh'
'''

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'Quramy/tsuquyomi'
if = 0

# }}}

# JavaScript {{{

[[plugins]]
repo = 'ternjs/tern_for_vim'
on_ft = 'javascript'

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
on_ft = 'javascript'

# }}}

# HTML/CSS {{{

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = 'scss'

# }}}

# C/C++ {{{

[[plugins]]
repo = 'Rip-Rip/clang_complete'
hook_add = '''
  let g:clang_complete_auto = 0
  let g:clang_auto_select = 0
  let g:clang_omnicppcomplete_compliance = 0
  let g:clang_make_default_keymappings = 0
  let g:clang_library_path='/usr/lib/llvm-3.8/lib/libclang.so.1'
'''
on_event = 'InsertEnter'

[[plugins]]
repo = 'zenbro/mirror.vim'

[[plugins]]
repo = 'vim-scripts/gtk-vim-syntax'

[[plugins]]
repo = 'vivien/vim-linux-coding-style'
hook_add = '''
  let g:linuxsty_patterns = [ "/usr/src/", "/linux" ]
'''
on_path = [ "/usr/src/", "/linux" ]

[[plugins]]
repo = 'thiblahute/vim-devhelp'
hook_add = '''
  let g:devhelpSearch=1
'''
on_ft = ['c', 'h', 'cpp']

# }}}

# TOML {{{

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# }}}

# vim:fdm=marker
